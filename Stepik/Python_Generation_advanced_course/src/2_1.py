# task 1 –ù–∞ easy
a, b = int(input()), int(input())
print(a + b)
print(a - b)
print(a * b)
print(a / b)
print(a // b)
print(a % b)
print((a**10 + b**10)**0.5)

# task 2 –ò–Ω–¥–µ–∫—Å –º–∞—Å—Å—ã —Ç–µ–ª–∞
mass, rost = float(input()), float(input())
imt = mass / rost**2
if imt > 25:
    print('–ò–∑–±—ã—Ç–æ—á–Ω–∞—è –º–∞—Å—Å–∞')
elif imt < 18.5:
    print('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–∞—è –º–∞—Å—Å–∞')
else:
    print('–û–ø—Ç–∏–º–∞–ª—å–Ω–∞—è –º–∞—Å—Å–∞')

# task 3 –°—Ç–æ–∏–º–æ—Å—Ç—å —Å—Ç—Ä–æ–∫–∏
s = input()
summ = len(s) * 0.6
print(f'{int(summ)} —Ä. {int(round(summ % 1 * 100, 0))} –∫–æ–ø.')


# task 4 –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤
s = input().split()
print(len(s))

# task 5 –ó–æ–¥–∏–∞–∫
year = ['–î—Ä–∞–∫–æ–Ω', '–ó–º–µ—è', '–õ–æ—à–∞–¥—å', '–û–≤—Ü–∞', '–û–±–µ–∑—å—è–Ω–∞', '–ü–µ—Ç—É—Ö', '–°–æ–±–∞–∫–∞', '–°–≤–∏–Ω—å—è', '–ö—Ä—ã—Å–∞', '–ë—ã–∫', '–¢–∏–≥—Ä', '–ó–∞—è—Ü']
n = int(input())

print(year[(n - 2000) % 12])

# task 6 –ü–µ—Ä–µ–≤–æ—Ä–æ—Ç —á–∏—Å–ª–∞
# 1
n = int(input())
bb = str(n)
s = ''
if len(str(n)) == 6:
    s += str(n // 10**5)
    n %= 10**5
while n > 0:
    if s == '' and n % 10 == 0:
        n //= 10
        continue
    else:
        s += str(n % 10)
    n //= 10
if bb[1] == '0' and len(bb) == 6:
    print(s + str(0))
else:
    print(s)

# 2
n = input()
new_n = int(n[:-5] + n[-5:][::-1])

print(new_n)

# task 7 Standard American Convention
#1
n, s, count  = input()[::-1], '', -1
for el in str(n):
    count += 1
    if count % 3 == 0:
        s += ','
    s += el
print(s[::-1][:-1])
#2
num = int(input())
print(f'{num:,}')

# task 8 –ó–∞–¥–∞—á–∞ –ò–æ—Å–∏—Ñ–∞ –§–ª–∞–≤–∏—è üå∂Ô∏èüå∂Ô∏è
# 1
def one_lst(lst, k):
	while len(lst) > 1:
		lst2 = lst * k                  # —Å–æ–∑–¥–∞–µ–º –∑–∞–ø–∞—Å –¥–ª–∏–Ω—ã —Å–ø–∏—Å–∫–∞
		el = lst2[k - 1]                # –Ω–∞—Ö–æ–¥–∏–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
		first_index = lst2.index(el)    # –Ω–∞—Ö–æ–¥–∏–º 1-–π –∏–Ω–¥–µ–∫—Å
		second_index = lst2[first_index + 1:].index(el) + first_index   # –Ω–∞—Ö–æ–¥–∏–º 2-–π –∏–Ω–¥–µ–∫—Å
		lst = lst2[first_index + 1:second_index + 1]                    # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ lst –≤—Å–µ —á—Ç–æ –º–µ–∂–¥—É 1 –∏ 2 –∏–Ω–¥–µ–∫—Å–æ–º
	return lst

n, k = int(input()), int(input())
lst = [i for i in range(1, n + 1)]
while len(lst) > k - 1:
    del lst[k - 1]
    lst = lst[k - 1:] + lst[:k - 1]
    if len(lst) <= k - 1:
        lst = one_lst(lst, k)
        break
if k == 1:
    print(n)
else:
    print(*lst)

# 2
n = int(input())
k = int(input())

res = 0
for i in range(1, n+1):
    res = (res + k) % i
print(res + 1)
# 3
n = int(input())
k = int(input())

#–°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ –Ω–æ–º–µ—Ä–æ–≤, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –ø–æ—Ç–æ–º –±—É–¥–µ–º –≤—ã–∫–∏–¥—ã–≤–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã.
line = [i for i in range(1, n+1)]

# –ù–∞–º –Ω—É–∂–Ω–æ –æ—Ç—Å—á–∏—Ç–∞—Ç—å k —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ –º–∞—Å—Å–∏–≤—É –∏–∑ n –ø–µ—Ä–≤—ã—Ö –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª. –ó–∞—Ç–µ–º –≤—ã–∫–∏–Ω—É—Ç—å
# —ç–ª–µ–º–µ–Ω—Ç, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Å—á–µ—Ç –∏ —Å–¥–≤–∏–Ω—É—Ç—å –≤–µ—Å—å –º–∞—Å—Å–∏–≤ —Ç–∞–∫, —á—Ç–æ–±—ã –ø–µ—Ä–≤—ã–º —Å—Ç–∞–ª
# —Å–ª–µ–¥—É—é—â–∏–π –ø–æ—Å–ª–µ –≤—ã–∫–∏–Ω—É—Ç–æ–≥–æ, –∞ —Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã, —á—Ç–æ –±—ã–ª–∏ –¥–æ –Ω–µ–≥–æ, –ø–µ—Ä–µ—à–ª–∏ –≤ –∫–æ–Ω–µ—Ü. –ê –¥–∞–ª—å—à–µ
# –≤—Å–µ –ø—Ä–æ—Å—Ç–æ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è, –ø–æ–∫–∞ –≤ –º–∞—Å—Å–∏–≤–µ –Ω–µ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç - —ç—Ç–æ –∏ –±—É–¥–µ—Ç –∏—Å–∫–æ–º—ã–π –Ω–æ–º–µ—Ä
# –î–ª—è —ç—Ç–æ–≥–æ —Å–Ω–∞—á–∞–ª–∞ –±–µ—Ä–µ–º –æ—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è k –Ω–∞ –¥–ª–∏–Ω—É –º–∞—Å—Å–∏–≤–∞ (–Ω–µ –ø—Ä–æ—Å—Ç–æ k - –ø–æ—Ç–æ–º—É —á—Ç–æ k
# –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ –¥–ª–∏–Ω—ã –º–∞—Å—Å–∏–≤–∞). –ï—Å–ª–∏ –æ–Ω –±–æ–ª—å—à–µ 0, —Ç–æ –≤—ã–∫–∏–¥—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ —Å –Ω–æ–º–µ—Ä–æ–º,
# —Ä–∞–≤–Ω—ã–º —ç—Ç–æ–º—É –æ—Å—Ç–∞—Ç–∫—É, —É–º–µ–Ω—å—à–µ–Ω–Ω–æ–º—É –Ω–∞ –µ–¥–∏–Ω–∏—Ü—É (–Ω—É–º–µ—Ä–∞—Ü–∏—è –æ—Ç –Ω—É–ª—è), –µ—Å–ª–∏ –∂–µ –æ–Ω —Ä–∞–≤–µ–Ω –Ω—É–ª—é,
# —Ç–æ —ç—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –Ω–∞–¥–æ –ø—Ä–æ—Å—Ç–æ –≤—ã–∫–∏–Ω—É—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç, –∞ –º–∞—Å—Å–∏–≤ –Ω–∏–∫—É–¥–∞ –Ω–µ —Å–¥–≤–∏–≥–∞—Ç—å.
# –û—Å—Ç–∞–≤—à–∏–π—Å—è –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –º–∞—Å—Å–∏–≤ –∏–∑ –æ–¥–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏ –¥–∞–µ—Ç –Ω—É–∂–Ω—ã–π –Ω–æ–º–µ—Ä.

while(len(line) > 1):
    num = k % len(line)
    if num > 0:
        pos = num - 1
        line.pop(pos)
        line = line[pos:] + line[:pos]
    else:
        line.pop(-1)

print(line[0])
